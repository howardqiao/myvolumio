# -----------------$HOME/.abcde.conf----------------- #
#
# A sample configuration file to convert music cds to
#       FLAC using abcde version 2.7.1
#
#       http://andrews-corner.org/abcde.html
# -------------------------------------------------- #

# Encode tracks immediately after reading. Saves disk space, gives
# better reading of 'scratchy' disks and better troubleshooting of
# encoding process but slows the operation of abcde quite a bit:
LOWDISK=y

INTERACTIVE=n

# Specify the method to use to retrieve the track information,
# the alternative is to specify 'cddb':
CDDBMETHOD=cddb

# Make a local cache of cddb entries and then volunteer to use
# these entries when and if they match the cd:
CDDBCOPYLOCAL="y"
CDDBLOCALDIR="/data/cddb/"
CDDBLOCALRECURSIVE="y"
CDDBUSELOCAL="y"

# Specify the encoder to use for FLAC. In this case
# flac is the only choice.
FLACENCODERSYNTAX=flac

# Specify the path to the selected encoder. In most cases the encoder
# should be in your $PATH as I illustrate below, otherwise you will
# need to specify the full path. For example: /usr/bin/flac
FLAC=/usr/bin/flac
GLYRC=/usr/bin/glyrc

# Specify your required encoding options here. Multiple options can
# be selected as '--best --another-option' etc.
# Overall bitrate is about 880 kbs/s with level 8.
FLACOPTS='-s -e -V -8'

# Output type for FLAC.
OUTPUTTYPE="flac"

# The cd ripping program to use. There are a few choices here: cdda2wav,
# dagrab, cddafs (Mac OS X only) and flac. New to abcde 2.7 is 'libcdio'.
CDROMREADERSYNTAX=cdparanoia

# Give the location of the ripping program and pass any extra options,
# if using libcdio set 'CD_PARANOIA=cd-paranoia'.
CDPARANOIA=cdparanoia
CDPARANOIAOPTS="--never-skip=40"

# Give the location of the CD identification program:
CDDISCID=cd-discid

# Give the base location here for the encoded music files.
OUTPUTDIR="$OUTPUTDIR"

# The default actions that abcde will take.
ACTIONS=read,encode,tag,move,clean

# Decide here how you want the tracks labelled for a standard 'single-artist',
# multi-track encode and also for a multi-track, 'various-artist' encode:
OUTPUTFORMAT='${ARTISTFILE}-${ALBUMFILE}/${TRACKFILE}'
VAOUTPUTFORMAT='${ALBUMFILE}/${ARTISTFILE}-${TRACKFILE}'

# Decide here how you want the tracks labelled for a standard 'single-artist',
# single-track encode and also for a single-track 'various-artist' encode.
# (Create a single-track encode with 'abcde -1' from the commandline.)
ONETRACKOUTPUTFORMAT='${ARTISTFILE}-${ALBUMFILE}/${ALBUMFILE}'
VAONETRACKOUTPUTFORMAT='${ALBUMFILE}/${ALBUMFILE}'

# Create playlists for single and various-artist encodes. I would suggest
# commenting these out for single-track encoding.
PLAYLISTFORMAT='${ARTISTFILE}-${ALBUMFILE}/${ALBUMFILE}.m3u'
VAPLAYLISTFORMAT='${ALBUMFILE}/${ALBUMFILE}.m3u'

# This function takes out dots preceding the album name, and removes a grab
# bag of illegal characters. It allows spaces, if you do not wish spaces add
# in -e 's/ /_/g' after the first sed command.
mungefilename ()
{
  echo "$@" | sed -e 's/^\.*//' | tr -d ":><|*/\"'?[:cntrl:]"
}

# What extra options?
MAXPROCS=1                              # Run a few encoders simultaneously
PADTRACKS=y                             # Makes tracks 01 02 not 1 2
#EXTRAVERBOSE=0                          # Useful for debugging
COMMENT='abcde version 2.7.1'           # Place a comment...
#EJECTCD=y                               # Please eject cd when finished :-)

#####ALBUMART

GLYRCOPTS="--qsratio 1.0 --from all;-slothradio; --lang en"
#ALBUMARTFILE="cover.jpg"
#ALBUMARTTYPE="JPEG"
ALBUMARTALWAYSCONVERT="n"

post_encode () {

ARTISTFILE="$(mungefilename "$TRACKARTIST")"
ALBUMFILE="$(mungefilename "$DALBUM")"
OUTCOVER="${OUTPUTDIR}/${ARTISTFILE}-${ALBUMFILE}/cover.png"

echo "Downloading Cover Art"
/usr/bin/glyrc cover --artist "${ARTISTFILE}" --album "${ALBUMFILE}"  -w "${OUTCOVER}"

echo "Setting Folder Permissions"
/usr/bin/sudo /bin/chmod -R 777 "${OUTPUTDIR}/${ARTISTFILE}-${ALBUMFILE}"

echo "Signaling Rip Termination"
/usr/bin/curl http://localhost:3000/api/v1/pluginEndpoint?endpoint=cdPostRip

echo "Ejecting Disk"
/usr/bin/eject

echo "Cleanup"
/bin/rm -rf "${OUTPUTDIR}/abcde.*"
}
